#!/bin/sh
# mping is a multiple host ping that output host's status as list
# Copyright 2019 Xavier Sanchez
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# 	http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# It's useful for many situations at my work.
#
# Information                    Color
# ------------------------------ --------
# DNS resolving failed           red
# ICMP destination unreachable   gray
# ICMP echo reply                yellow
# SSH listening                  green

# Feel free to adapt, enhance. Take care.

: "${HOSTS:=$@}"
: "${INTERVAL:=1}"
: "${TIMEOUT:=3}"

LINENR=$#

reset() {
	printf "\\033[0m"
}

red() {
	printf "\\033[31m"
}

gray() {
	printf "\\033[37m"
}

yellow() {
	printf "\\033[93m"
}

green() {
	printf "\\033[92m"
}

reverse() {
	printf "\\033[7m"
}

quit() {
	printf "\\033[%dB" "$LINENR"
	tput cnorm
	reset
	exit
}

status() {
	# DNS
	if getent hosts "$1" >/dev/null 2>&1; then
		gray
	else
		red
	fi

	# ICMP
	if ping -W "$TIMEOUT" -c1 "$1" >/dev/null 2>&1; then
		yellow
	fi

	# SSH
	if nmap --host-timeout "$TIMEOUT" -oG - \
		-p 22 "$1" 2>/dev/null 2>&1 |
		grep -q 22/open; then
		green
	fi

	printf %s "${1}"
	reset
}

usage() {
	echo "$0 -h | [host...]"
}

case $1 in
? | -h | --help)
	usage
	exit 2
	;;
esac

trap quit QUIT TERM INT

stty -ctlecho
tput civis

# save curpos
printf "\\033[s"
while :; do
	for host in $HOSTS; do
		status "$host"
		printf \\n
	done
	# restore curpos
	printf "\\033[%dB\\033[u" "$LINENR"
	sleep "$INTERVAL"
done
